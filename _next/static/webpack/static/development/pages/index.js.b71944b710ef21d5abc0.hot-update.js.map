{"version":3,"file":"static/webpack/static/development/pages/index.js.b71944b710ef21d5abc0.hot-update.js","sources":["webpack:///./src/containers/Register/RegisterContainer.js"],"sourcesContent":["import React, { Component, Fragment } from 'react'\nimport {\n  Backdrop,\n  Fade,\n  Modal,\n  Container,\n  Icon,\n  FormControl,\n  InputLabel,\n  Input,\n  FormHelperText,\n  TextField,\n  MenuItem,\n  Button,\n  Typography,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n} from '@material-ui/core'\nimport ChevronRight from '@material-ui/icons/ChevronRight'\nimport _isEqual from 'lodash/isEqual'\nimport _trim from 'lodash/trim'\nimport _split from 'lodash/split'\nimport { withStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport GradientStepper from '@Components/Stepper/GradientStepper'\nimport styles from './styles'\n\nconst STEPS = [\n  {\n    label: 'ข้อมูล นศ.',\n    icon: (\n      <Icon\n        className=\"fas fa-user-graduate\"\n        style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}\n      />\n    ),\n  },\n  {\n    label: 'ข้อมูลส่วนตัว',\n    icon: (\n      <Icon\n        className=\"fas fa-user\"\n        style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}\n      />\n    ),\n  },\n  {\n    label: 'ข้อมูลการติดต่อ',\n    icon: (\n      <Icon\n        className=\"fas fa-phone-volume\"\n        style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}\n      />\n    ),\n  },\n]\n\nconst MAJOR = [\n  { label: 'วิศวะกรรมซอฟต์แวร์', value: 'SE' },\n  { label: 'การจัดการสมัยใหม่และเทคโนโลยีสารสนเทศ', value: 'MMIT' },\n  { label: 'แอนิเมชั่นและวิชวลเอฟเฟกต์', value: 'ANI' },\n  { label: 'ดิจิทัลเกม', value: 'DG' },\n  { label: 'บูรณาการอุตสาหกรรมดิจิทัล', value: 'DII' },\n]\n\nconst defaultForm = {\n  stdID: '',\n  major: '',\n  name: '',\n  nickName: '',\n  gender: '',\n  facebook: '',\n  line: '',\n}\n\nexport class RegisterContainer extends Component {\n  static propTypes = {\n    classes: PropTypes.object.isRequired,\n    visible: PropTypes.bool,\n    handleClose: PropTypes.func,\n  }\n\n  static defaultProps = {\n    visible: false,\n    handleClose: () => {},\n  }\n\n  state = {\n    currentStep: 0,\n    formValues: { ...defaultForm },\n    errors: { ...defaultForm },\n  }\n\n  handleChange = name => event => {\n    const { setValue } = this\n    const { value } = event.target\n    event.persist()\n    if (name === 'stdID') {\n      // const regex = /[^0-9]/g\n      // const filtered = value.replace(regex, '')\n      // setValue(name, filtered.substring(0, 9))\n      const regex = /[0-9]{1,9}/\n      if (value.match(regex)) {\n        setValue(name, value)\n      }\n    } else if (name === 'name' || name === 'nickName') {\n      const nameRegex = /[!$%^&*\\(\\)_+|~\\-=`{}\\[\\]:\";<>?,./]/g\n      const firstCharRegex = /[!$%^&*\\(\\)_+|~\\-=`'{}\\[\\]:\";<>?,./\\s]/\n      if (!value.charAt(0).match(firstCharRegex)) {\n        const removeCharacter = value.replace(nameRegex, '')\n        setValue(name, removeCharacter.replace('  ', ' '))\n      }\n    } else if (name === 'facebook' || name === 'line') {\n      if (!value.charAt(0) !== ' ') {\n        setValue(name, value.replace('  ', ' '))\n      }\n    } else {\n      setValue(name, value)\n    }\n  }\n\n  setValue = (name, value) =>\n    this.setState(state => ({\n      formValues: {\n        ...state.formValues,\n        [name]: value,\n      },\n      errors: {\n        ...state.errors,\n        [name]: '',\n      },\n    }))\n\n  handleSubmitStep1 = () => {\n    const stdIDValidate = /[0-9]{9}/g\n    const { formValues } = this.state\n    const newErrors = { ...defaultForm }\n    if (!formValues.stdID) {\n      newErrors.stdID = 'กรุณากรอกรหัสนักศึกษา'\n    } else if (!formValues.stdID.match(stdIDValidate)) {\n      newErrors.stdID = 'รหัสนักศึกษาต้องมี9ตัวอักษร'\n    }\n\n    if (!formValues.major) {\n      newErrors.major = 'กรุณาเลือกสาขา'\n    }\n\n    // Form decision\n    if (_isEqual(newErrors, defaultForm)) {\n      this.setState({ currentStep: 1 })\n    } else {\n      this.setState({ errors: newErrors })\n    }\n  }\n\n  handleSubmitStep2 = () => {\n    const { formValues } = this.state\n    const newErrors = { ...defaultForm }\n    if (!formValues.name) {\n      newErrors.name = 'กรุณากรอกชื่อและนามสกุล'\n    } else if (_split(_trim(formValues.name), ' ').length === 1) {\n      newErrors.name = 'กรุณากรอกนามสกุล'\n    }\n    if (!formValues.nickName) {\n      newErrors.nickName = 'กรุณากรอกชื่อเล่น'\n    }\n    if (!formValues.gender) {\n      newErrors.gender = 'please select gender'\n    }\n\n    // Form decision\n    if (_isEqual(newErrors, defaultForm)) {\n      this.setState({ currentStep: 2 })\n    } else {\n      this.setState({ errors: newErrors })\n    }\n  }\n\n  handleSubmitStep3 = () => {\n    const { formValues } = this.state\n    const newErrors = { ...defaultForm }\n    if (!formValues.facebook) {\n      newErrors.facebook = 'กรุณากรอก Facebook'\n    }\n    if (!formValues.line) {\n      newErrors.line = 'กรุณากรอก Line'\n    }\n\n    if (_isEqual(newErrors, defaultForm)) {\n      this.props.handleClose()\n    } else {\n      this.setState({ errors: newErrors })\n    }\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n  }\n\n  ButtonStep = ({ onClick = () => {}, title = '', showIcon = false }) => {\n    const { classes } = this.props\n    return (\n      <div className={classes.stepButtonContainer}>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={onClick}\n          className={classes.stepButton}\n        >\n          <Typography align=\"center\" className={classes.stepButtonText}>\n            {title}\n          </Typography>\n          {showIcon && <ChevronRight />}\n        </Button>\n      </div>\n    )\n  }\n\n  RenderTextInput = ({ label, value }) => {\n    const { classes } = this.props\n    const { formValues, errors } = this.state\n    return (\n      <FormControl className={classes.inputStyle} error={!!errors[value]}>\n        <InputLabel htmlFor={value}>{label}</InputLabel>\n        <Input\n          id={value}\n          value={formValues[value]}\n          onChange={this.handleChange(value)}\n          aria-describedby={`${value}-text`}\n        />\n        <FormHelperText id={`${value}-text`}>{errors[value] || ' '}</FormHelperText>\n      </FormControl>\n    )\n  }\n\n  renderFormStep = () => {\n    const { classes } = this.props\n    const { formValues, errors, currentStep } = this.state\n    const { ButtonStep, RenderTextInput } = this\n    if (currentStep === 0) {\n      return (\n        <Fragment>\n          <div className={classes.inputContainer}>\n            <RenderTextInput label=\"รหัสนักศึกษา\" value=\"stdID\" />\n            <TextField\n              id=\"major\"\n              select\n              label=\"สาขา\"\n              className={classes.inputStyle}\n              value={formValues.major}\n              onChange={this.handleChange('major')}\n              error={!!errors.major}\n              helperText={errors.major || ' '}\n            >\n              {MAJOR.map(option => (\n                <MenuItem key={option.value} value={option.value}>\n                  {option.label}\n                </MenuItem>\n              ))}\n            </TextField>\n          </div>\n          <ButtonStep title=\"ขั้นตอนต่อไป\" onClick={this.handleSubmitStep1} showIcon />\n        </Fragment>\n      )\n    }\n    if (currentStep === 1) {\n      return (\n        <Fragment>\n          <div className={classes.inputContainer}>\n            <RenderTextInput label=\"ชื่อ-สกุล\" value=\"name\" />\n            <RenderTextInput label=\"ชื่อเล่น\" value=\"nickName\" />\n            <RadioGroup\n              aria-label=\"gender\"\n              name=\"gender\"\n              className={classes.genderSelector}\n              value={formValues.gender}\n              onChange={this.handleChange('gender')}\n            >\n              <FormControlLabel\n                value=\"female\"\n                control={<Radio className={errors.gender && classes.genderError} />}\n                label={\n                  <Typography color={errors.gender ? 'error' : 'textPrimary'}>ผู้หญิง</Typography>\n                }\n              />\n              <FormControlLabel\n                value=\"male\"\n                control={<Radio className={errors.gender && classes.genderError} />}\n                label={\n                  <Typography color={errors.gender ? 'error' : 'textPrimary'}>ผู้ชาย</Typography>\n                }\n              />\n            </RadioGroup>\n          </div>\n          <ButtonStep title=\"ขั้นตอนสุดท้าย\" onClick={this.handleSubmitStep2} showIcon />\n        </Fragment>\n      )\n    }\n    if (currentStep === 2) {\n      return (\n        <Fragment>\n          <div className={classes.inputContainer}>\n            <RenderTextInput label=\"Facebook\" value=\"facebook\" />\n            <RenderTextInput label=\"Line\" value=\"line\" />\n          </div>\n          <ButtonStep title=\"เสร็จสิ้น\" onClick={this.handleSubmitStep3} />\n        </Fragment>\n      )\n    }\n    return <></>\n  }\n\n  render() {\n    const { visible, classes, handleClose } = this.props\n    const { currentStep } = this.state\n\n    return (\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={visible}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={visible}>\n          <Container className={classes.paper}>\n            <GradientStepper activeStep={currentStep} steps={STEPS} />\n            <form className={classes.formStyle}>{this.renderFormStep()}</form>\n          </Container>\n        </Fade>\n      </Modal>\n    )\n  }\n}\n\nexport default withStyles(styles)(RegisterContainer)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAUA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAUA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAWA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAaA;AACA;AACA;AAHA;AACA;AAbA;AAkBA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1BA;AACA;AAnBA;AA8CA;AACA;AACA;AAIA;AALA;AAAA;AADA;AACA;AA/CA;AA2DA;AADA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AA/EA;AAgFA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAtGA;AAuGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAvHA;AAyHA;AACA;AACA;AA3HA;AA4HA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AA9IA;AA+IA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AA/JA;AAgtQA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AACA;AAHA;AACA;AAFA;AAQA;AACA;AAFA;AACA;AAiQA;;;;A","sourceRoot":""}