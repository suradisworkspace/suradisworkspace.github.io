{"version":3,"file":"static/webpack/static/development/pages/index.js.04bda4670aa8896f5c06.hot-update.js","sources":["webpack:///./src/containers/Register/RegisterContainer.js"],"sourcesContent":["import React, { Component, Fragment } from 'react'\nimport {\n  Backdrop,\n  Fade,\n  Modal,\n  Container,\n  Icon,\n  FormControl,\n  InputLabel,\n  Input,\n  FormHelperText,\n  TextField,\n  MenuItem,\n  Button,\n  Typography,\n} from '@material-ui/core'\nimport ChevronRight from '@material-ui/icons/ChevronRight'\nimport _isEqual from 'lodash/isEqual'\nimport { withStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport GradientStepper from '@Components/Stepper/GradientStepper'\nimport styles from './styles'\n\nconst STEPS = [\n  {\n    label: 'ข้อมูล นศ.',\n    icon: (\n      <Icon\n        className=\"fas fa-user-graduate\"\n        style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}\n      />\n    ),\n  },\n  {\n    label: 'ข้อมูลส่วนตัว',\n    icon: (\n      <Icon\n        className=\"fas fa-user\"\n        style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}\n      />\n    ),\n  },\n  {\n    label: 'ข้อมูลการติดต่อ',\n    icon: (\n      <Icon\n        className=\"fas fa-phone-volume\"\n        style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}\n      />\n    ),\n  },\n]\n\nconst MAJOR = [\n  { label: 'วิศวะกรรมซอฟต์แวร์', value: 'SE' },\n  { label: 'การจัดการสมัยใหม่และเทคโนโลยีสารสนเทศ', value: 'MMIT' },\n  { label: 'แอนิเมชั่นและวิชวลเอฟเฟกต์', value: 'ANI' },\n  { label: 'ดิจิทัลเกม', value: 'DG' },\n  { label: 'บูรณาการอุตสาหกรรมดิจิทัล', value: 'DII' },\n]\n\nconst defaultForm = {\n  stdID: '',\n  major: '',\n}\n\nexport class RegisterContainer extends Component {\n  static propTypes = {\n    classes: PropTypes.object.isRequired,\n    visible: PropTypes.bool,\n    handleClose: PropTypes.func,\n  }\n\n  static defaultProps = {\n    visible: false,\n    handleClose: () => {},\n  }\n\n  state = {\n    currentStep: 0,\n    formValues: { ...defaultForm },\n    errors: { ...defaultForm },\n  }\n\n  handleChange = name => event => {\n    const { setValue } = this\n    const { value } = event.target\n    event.persist()\n    if (name === 'stdID') {\n      const regex = /[^0-9]/g\n      const filtered = value.replace(regex, '')\n      setValue(name, filtered.substring(0, 9))\n    } else {\n      setValue(name, value)\n    }\n  }\n\n  setValue = (name, value) =>\n    this.setState(state => ({\n      formValues: {\n        ...state.formValues,\n        [name]: value,\n      },\n      errors: {\n        ...state.errors,\n        [name]: '',\n      },\n    }))\n\n  handleSubmitStep1 = () => {\n    const stdIDValidate = /[0-9]{9}/g\n    const { formValues } = this.state\n    const newErrors = { ...defaultForm }\n    if (!formValues.stdID) {\n      newErrors.stdID = 'กรุณากรอกรหัสนักศึกษา'\n    } else if (!formValues.stdID.match(stdIDValidate)) {\n      newErrors.stdID = 'รหัสนักศึกษาต้องมี9ตัวอักษร'\n    }\n\n    if (!formValues.major) {\n      newErrors.major = 'กรุณาเลือกสาขา'\n    }\n    if (_isEqual(newErrors, defaultForm)) {\n      this.setState({ currentStep: 1 })\n    } else {\n      this.setState({ errors: newErrors })\n    }\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n  }\n\n  renderFormStep = () => {\n    const { classes } = this.props\n    const { formValues, errors, currentStep } = this.state\n    if (currentStep === 0) {\n      return (\n        <Fragment>\n          <div className={classes.inputContainer}>\n            <FormControl className={classes.inputStyle} error={!!errors.stdID}>\n              <InputLabel htmlFor=\"stdID\">รหัส นักศึกษา</InputLabel>\n              <Input\n                id=\"stdID\"\n                value={formValues.stdID}\n                onChange={this.handleChange('stdID')}\n                aria-describedby=\"stdID-text\"\n              />\n              <FormHelperText id=\"stdID-text\">{errors.stdID || ' '}</FormHelperText>\n            </FormControl>\n            <TextField\n              id=\"major\"\n              select\n              label=\"สาขา\"\n              className={classes.inputStyle}\n              value={formValues.major}\n              onChange={this.handleChange('major')}\n              error={!!errors.major}\n              helperText={errors.major || ' '}\n            >\n              {MAJOR.map(option => (\n                <MenuItem key={option.value} value={option.value}>\n                  {option.label}\n                </MenuItem>\n              ))}\n            </TextField>\n          </div>\n          <div className={classes.stepButtonContainer}>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={this.handleSubmitStep1}\n              className={classes.stepButton}\n            >\n              <Typography align=\"center\" className={classes.stepButtonText}>\n                ขั้นตอนต่อไป\n              </Typography>\n              <ChevronRight />\n            </Button>\n          </div>\n        </Fragment>\n      )\n    }\n    if (currentStep === 1) {\n      return (\n        <Fragment>\n          <div className={classes.inputContainer}></div>\n          <div className={classes.stepButtonContainer}>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={this.handleSubmitStep1}\n              className={classes.stepButton}\n            >\n              <Typography align=\"center\" className={classes.stepButtonText}>\n                ขั้นตอนสุดท้าย\n              </Typography>\n              <ChevronRight />\n            </Button>\n          </div>\n        </Fragment>\n      )\n    }\n    if (currentStep === 2) {\n      return <></>\n    }\n    return <></>\n  }\n\n  render() {\n    const { visible, classes, handleClose } = this.props\n    const { currentStep } = this.state\n\n    return (\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={visible}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={visible}>\n          <Container className={classes.paper}>\n            <GradientStepper activeStep={currentStep} steps={STEPS} />\n            <form className={classes.formStyle}>{this.renderFormStep()}</form>\n          </Container>\n        </Fade>\n      </Modal>\n    )\n  }\n}\n\nexport default withStyles(styles)(RegisterContainer)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAeA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAUA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAUA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAWA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AAFA;AAKA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAaA;AACA;AACA;AAHA;AACA;AAbA;AAkBA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AACA;AAnBA;AA+BA;AACA;AACA;AAIA;AALA;AAAA;AADA;AACA;AAhCA;AA4CA;AADA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AA9DA;AAgEA;AACA;AACA;AAlEA;AAmxKA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AACA;AAHA;AACA;AAFA;AAQA;AACA;AAFA;AACA;AAmKA;;;;A","sourceRoot":""}